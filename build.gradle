plugins {
    id("com.diffplug.spotless") version "6.13.0"
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'eclipse'
    apply plugin: 'idea'
    apply plugin: 'jacoco'
    apply plugin: 'java-library-distribution'
    apply plugin: 'com.diffplug.spotless'

    project.version = '4.0.0-SNAPSHOT'

    ext {
        grpcVersion = '1.71.0'
        protocVersion = '3.25.6'
        picoCliVersion = '4.7.6'
        guiceVersion = '5.1.0'
        guavaVersion = '32.1.3-jre'
        slf4jVersion = '1.7.36'
        log4jVersion = '2.24.3'
        jsonpVersion = '1.1.4'
        jacksonVersion = '2.18.3'
        toml4jVersion = '0.7.2'
        scalarDbVersion = '3.15.1'
        scalarAdminVersion = '2.2.1'
        resilience4jRetryVersion = '1.7.1'
        dropwizardMetricsVersion = '4.2.30'
        prometheusVersion = '0.16.0'
        jettyVersion = '9.4.57.v20241219'
        assertjVersion = '3.27.3'
        junitVersion = '5.12.0'
        junitPlatformVersion = '1.12.0'
        mockitoVersion = '4.11.0'
        errorproneVersion = '2.10.0'
        errorproneJavacVersion = '9+181-r4173-1'
        errorpronePluginVersion = '2.0.2'
        spotbugsVersion = '4.8.6'
        spotbugsPluginVersion = '5.2.5'
        commonsTextVersion = '1.13.0'
        stefanbirknerSystemLambdaVersion = '1.2.1'
        googleJavaFormatVersion = '1.7'
        dockerPluginVersion = '0.34.0'
        bouncyCastleCryptoVersion = '1.70'

        dockerVersion = project.properties['dockerVersion'] ?: project.version
    }

    repositories {
        mavenCentral()
        maven { url 'https://jitpack.io' }
    }

    dependencies {
        implementation group: 'org.slf4j', name: 'slf4j-api', version: "${slf4jVersion}"
        implementation group: 'com.google.inject', name: 'guice', version: "${guiceVersion}"
        implementation group: 'com.google.guava', name: 'guava', version: "${guavaVersion}"
        implementation group: 'javax.json', name: 'javax.json-api', version: "${jsonpVersion}"
        implementation group: 'org.glassfish', name: 'javax.json', version: "${jsonpVersion}"
        implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
        testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: "${junitVersion}"
        testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: "${junitVersion}"
        // Import this module to use ConsoleLauncher to execute :ledger:permissionTest LedgerServicePermissionTest.
        testImplementation group: 'org.junit.platform', name: 'junit-platform-console', version: "${junitPlatformVersion}"
        testImplementation group: 'org.assertj', name: 'assertj-core', version: "${assertjVersion}"
        testImplementation group: 'org.mockito', name: 'mockito-core', version: "${mockitoVersion}"
        testImplementation group: 'org.mockito', name: 'mockito-inline', version: "${mockitoVersion}"
    }

    test {
        maxHeapSize "512m"
        testLogging.showStandardStreams = true

        useJUnitPlatform()
    }

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    group = "com.scalar-labs"

    distZip {
        archiveFileName = "${project.name}.zip"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        dependsOn += test
    }

    distTar {
        archiveFileName = "${project.name}.tar"
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
        dependsOn += test
    }

    installDist {
        duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task dockerfileLint(type: Exec) {
        description 'Lint the Dockerfile'
        executable "${rootDir}/scripts/docker/lint.sh"
    }
}
