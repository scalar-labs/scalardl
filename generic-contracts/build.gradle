plugins {
    id 'net.ltgt.errorprone' version "${errorpronePluginVersion}"
    id "com.github.spotbugs" version "${spotbugsPluginVersion}"
}

sourceSets {
    integrationTest {
        java {
            compileClasspath += main.output + test.output
            runtimeClasspath += main.output + test.output
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

configurations {
    integrationTestImplementation.extendsFrom testImplementation
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
    integrationTestCompileOnly.extendsFrom testCompileOnly
}

dependencies {
    implementation project(':client')
    implementation project(':ledger')
    implementation group: 'com.scalar-labs', name: 'scalardb', version: "${scalarDbVersion}"
    testImplementation group: 'com.scalar-labs', name: 'scalardb-schema-loader', version: "${scalarDbVersion}"

    // for Error Prone
    errorprone "com.google.errorprone:error_prone_core:${errorproneVersion}"
    errorproneJavac "com.google.errorprone:javac:${errorproneJavacVersion}"

    // for SpotBugs
    spotbugs "com.github.spotbugs:spotbugs:${spotbugsVersion}"
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
}

task integrationTest(type: Test) {
    useJUnitPlatform()
    description 'Runs the integration tests.'
    group 'verification'
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath
    outputs.upToDateWhen { false } // ensures integration tests are run every time when called
    shouldRunAfter test
    options {
        systemProperties(System.getProperties().findAll{it.key.toString().startsWith("scalar")})
    }
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat('1.7')
    }
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}

spotbugsMain.reports {
    html.enabled = true
}

spotbugsTest.reports {
    html.enabled = true
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

distZip {
    archiveFileName = "scalardl-generic-contracts-${project.version}.zip"
    into("scalardl-generic-contracts-${project.version}") {
        from '.'
        include 'conf/**'
        include 'build/classes/java/main/**'
    }
}
