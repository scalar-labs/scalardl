# Optional. A hostname or an IP address of the server. Use localhost by default if not specified.
# It assuems that there is a single endpoint that is given by DNS or a load balancer.
scalar.dl.client.server.host=localhost

# Optional. A port number of the server. Use 50051 by default if not specified.
scalar.dl.client.server.port=50051

# Optional. A port number of the server for privileged services. Use 50052 by default if not specified.
#scalar.dl.client.server.privileged_port=50052

# Required. The holder ID of a certificate.
# It must be configured for each private key and unique in the system.
scalar.dl.client.cert_holder_id=user1

# Optional. The version of the certificate. Use 1 by default if not specified.
# Use another bigger integer if you need to change your private key.
#scalar.dl.client.cert_version=1

# Required. The path of the certificate file.
scalar.dl.client.cert_path=../conf/client.pem

# Required. The path of a corresponding private key file to the certificate.
# Exceptionally it can be empty in some requests to privileged services
# such as registerCertificate and registerFunction since they don't need a signature.
scalar.dl.client.private_key_path=../conf/client-key.pem

# Optional. A flag to enable TLS communication. False by default.
scalar.dl.client.tls.enabled=false

# Optional. A custom CA root certificate for TLS communication.
# If the issuing certificate authority is known to the client, it can be empty.
#scalar.dl.client.tls.ca_root_cert_path=/path/to/ca-root-cert

# Optional. An authorization credential. (e.g. authorization: Bearer token)
# If this is given, clients will add "authorization: <credential>" http/2 header.
#scalar.dl.client.authorization.credential=credential

# Experimental. Proxy server
#scalar.dl.client.proxy.server=localhost:10051