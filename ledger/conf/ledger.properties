#
# For ledger
#

# Name of ledger ("Scalar Ledger" by default). It is used to identify a ledger.
#scalar.dl.ledger.name=

# Namespace of ledger tables ("scalar" by default).
#scalar.dl.ledger.namespace=

# The authentication method for a client and Ledger servers. Use "digital-signature" (default) or "hmac".
# This has to be consistent with the client configuration.
#scalar.dl.ledger.authentication.method=

# A cipher key used to encrypt and decrypt the HMAC secret keys of client entities.
# This variable is used only when scalar.dl.ledger.authentication.method is "hmac".
# Please set an unpredictable and long enough value.
#scalar.dl.ledger.authentication.hmac.cipher_key=

# Server port (50051 by default).
#scalar.dl.ledger.server.port=8443

# Server privileged port (50052 by default).
#scalar.dl.ledger.server.privileged_port=

# Server admin port (50053 by default).
#scalar.dl.ledger.server.admin_port=

# Prometheus exporter port (8080 by default). Prometheus exporter will not be started if a negative number is given.
#scalar.dl.ledger.server.prometheus_exporter_port=8080

# A flag to enable TLS between clients and servers (false by default).
#scalar.dl.ledger.server.tls.enabled=false

# Certificate chain file used for TLS communication.
# It can be empty if scalar.dl.ledger.server.tls.enabled=false .
#scalar.dl.ledger.server.tls.cert_chain_path=/tmp/sslcert/ledger.crt

# Private key file used for TLS communication.
# It can be empty if scalar.dl.ledger.server.tls.enabled=false .
#scalar.dl.ledger.server.tls.private_key_path=/tmp/sslcert/ledger.pem

# A flag to enable asset proof that is used to verify assets (false by default).
# This feature must be enabled in both client and server.
#scalar.dl.ledger.proof.enabled=false

# The path of a private key file in PEM format. Either this or scalar.dl.ledger.proof.private_key_pem is used for signing proofs with digital signatures.
# The signatures are also used for Auditor to authenticate the corresponding proofs from Ledger if scalar.dl.ledger.servers.authentication.hmac.secret_key is empty.
#scalar.dl.ledger.proof.private_key_path=/path/to/private_key.pem

# PEM-encoded private key data. Either this or scalar.dl.ledger.proof.private_key_path is used for signing proofs with digital signatures.
# The signatures are also used for Auditor to authenticate the corresponding proofs from Ledger if scalar.dl.ledger.servers.authentication.hmac.secret_key is empty.
#scalar.dl.ledger.proof.private_key_pem=

# A flag to enable function for mutable database (true by default).
#scalar.dl.ledger.function.enabled=true

# A flag to use nonce as a transaction ID (true by default).
#scalar.dl.ledger.nonce_txid.enabled=true

# A flag to use Auditor (disabled by default).
#scalar.dl.ledger.auditor.enabled=false

# A secret key of HMAC for the authentication of messages between (Ledger and Auditor) servers. The same key has to be set in the corresponding Auditor as well.
# If this is not set, Ledger uses digital signature authentication using scalar.dl.ledger.proof.private_key_pem/path for signing and
# scalar.dl.ledger.auditor.cert_holder_id and its corresponding certificate (stored in the database) for verification.
#scalar.dl.ledger.servers.authentication.hmac.secret_key=

# This will be deleted in release 5.0.0 since Ledger-Auditor authentication will use HMAC only.
# Auditor certificate holder ID ("auditor" by default).
#scalar.dl.ledger.auditor.cert_holder_id=auditor

# This will be deleted in release 5.0.0 since Ledger-Auditor authentication will use HMAC only.
# Auditor certificate version (1 by default).
#scalar.dl.ledger.auditor.cert_version=1

# Binary names of contracts that can be executed
#scalar.dl.ledger.executable_contracts=/path/to/contracts.toml

# A flag to access asset table directly without going through asset_metadata (false by default).
# This should be set to false for some databases such as Cassandra that incur multiple database lookups for scanning a clustering key with limit 1.
# This should be set to true if an underlying database can utilize index scan to access the latest asset entry efficiently.
#scalar.dl.ledger.direct_asset_access.enabled=false

# A flag to manage transaction states by Ledger (false by default).
# This must be enabled when using JdbcTransactionManager as the transaction manager of ScalarDB.
#scalar.dl.ledger.tx_state_management.enabled=false

#
# For database
#

# Comma separated contact points
scalar.db.contact_points=localhost

# Port number for all the contact points. Default port number for each database is used if empty.
#scalar.db.contact_port=

# Credential information to access the database
scalar.db.username=cassandra
scalar.db.password=cassandra

# Storage implementation. Either cassandra or cosmos can be set. Default storage is cassandra.
#scalar.db.storage=cassandra

# Default isolation level. Either SNAPSHOT or SERIALIZABLE can be specified. SNAPSHOT is used by default.
#scalar.db.isolation_level=SERIALIZABLE

# Default serializable strategy for ConsensusCommit transaction manager.
# Either EXTRA_READ or EXTRA_WRITE can be specified. EXTRA_READ is used by default.
# If SNAPSHOT is specified, this is ignored.
#scalar.db.consensuscommit.serializable_strategy=
