plugins {
    id 'net.ltgt.errorprone' version "${errorpronePluginVersion}"
    id "com.github.spotbugs" version "${spotbugsPluginVersion}"
}

dependencies {
    implementation project(':client')
    implementation project(':generic-contracts')
    implementation group: 'org.partiql', name: 'partiql-parser', version: "${partiqlVersion}"

    // for Error Prone
    errorprone "com.google.errorprone:error_prone_core:${errorproneVersion}"
    errorproneJavac "com.google.errorprone:javac:${errorproneJavacVersion}"

    // for SpotBugs
    spotbugs "com.github.spotbugs:spotbugs:${spotbugsVersion}"
    compileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
    testCompileOnly "com.github.spotbugs:spotbugs-annotations:${spotbugsVersion}"
}

spotless {
    java {
        target 'src/*/java/**/*.java'
        importOrder()
        removeUnusedImports()
        googleJavaFormat('1.7')
    }
}

spotbugs {
    ignoreFailures = false
    showStackTraces = true
    showProgress = true
    effort = 'default'
    reportLevel = 'default'
    maxHeapSize = '1g'
    extraArgs = [ '-nested:false' ]
    jvmArgs = [ '-Duser.language=en' ]
}

spotbugsMain.reports {
    html.enabled = true
}

spotbugsTest.reports {
    html.enabled = true
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
